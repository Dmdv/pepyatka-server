<% layout('../../layouts/layout.ejs') -%>

<script type="text/x-handlebars" data-template-name="application">
  <div class="container">
    <h1><a {{action showAllPosts}}>ff/b/</a></h1>

    <div class="row">
      <div class="span7">
        {{outlet}}
      </div>
    </div>
  </div>
</script>

<script type="text/x-handlebars" data-template-name="post-list-view">
  <div class="clearfix">
    <div>
      {{view App.CreatePostView target="App.postsController" action="submitPost"
            class="span7"}}
    </div>
    <div class="pull-right">
      <button {{action submitPost target="App.postsController"}} class="btn pull-right">Post</button>
    </div>
  </div>

  <ul class="media-list">
    {{view Ember.CollectionView contentBinding="App.postsController"
           itemViewClass="App.PostContainerView"}}
  </ul>
</script>

<script type="text/x-handlebars" data-template-name="post-view">
  <li class="media">
    {{#with view.content}}  
      <hr/>

      <div class="pull-left">
        <img class="media-object" src="/img/48x48.png">
      </div>

      <div class="media-body">
        <h5 class="media-heading">{{user.username}}</h5>

        <div>{{body}}</div>
          <small>
            <a {{action showPost this}}>
              <time datetime="{{created_at}}">{{created_ago}}</time>
            </a>
            -
            {{#view App.CommentPostView target="parentView" action="toggleVisibility"}}
              Comment
            {{/view}}
          </small>
    
          <small>
            <ul class="unstyled">
              {{#each comment in comments}}
                <li>
                  <i class="icon-comment-alt"></i> {{comment.body}} - {{comment.user.username}}
                </li>
              {{/each}}
            </ul>
          </small>
    
          {{#view App.CommentForm}}
            <div>
              <small>
                <div>
                  {{view App.CreateCommentView target="parentView" 
                        action="submitComment" valueBinding="view.body"
                        class="span6 input-tiny"}}
                </div>
                <div>
                  <button {{action submitComment target="view"}} class="btn btn-small">Post</button>
                  <a {{action toggleVisibility target="view"}}>Cancel</a>
                </div>
              </small>
            </div>
          {{/view}} 
        </div>
      </div>
    {{/with}}
  </li>
</script>

<script type="text/x-handlebars" data-template-name="a-post">
  <p><a {{action showAllPosts}}>All posts</a></p>

    <div>{{user.username}}</div>
    <div>{{body}}</div>
    <div>
      <small>
        <time>{{created_at}}</time>
        -
        {{#view App.CommentPostView target="parentView" action="toggleVisibility"}}
          Comment
        {{/view}}
      </small>
    </div>

    <!-- TODO: merge post-view and a-post templates -->
    <small>
      <ul class="unstyled">
        {{#each comment in comments}}
          <li>
            <i class="icon-comment-alt"></i> {{comment.body}} - {{comment.user.username}}
          </li>
        {{/each}}
      </div>
    </small>

    {{#view App.CommentForm}}
      <div>
        <div>
          {{view App.CreateCommentView target="parentView" 
                action="submitComment" valueBinding="view.body"}}
        </div>
        <div>
          <button {{action submitComment target="view"}}>Post</button>
          <a>Cancel</a>
        </div>
      </div>
    {{/view}} 
</script>

<script src="/js/app/app.js"></script>

<script>
  var socket = io.connect('/');

  socket.emit('subscribe', { username: '<%= current_user.username %>' });

  socket.on('newPost', function (data) {
    var post = App.Post.create(data.post)
   
    App.postsController.addObject(post)
  });

  socket.on('updatePost', function(data) {
  })

  socket.on('destroyPost', function(data) {
  })

  socket.on('newComment', function (data) {
    var comment = App.Comment.create(data.comment)
   
    var post = App.postsController.find(function(post) {
      return post.id == data.comment.post_id
    })

    post.set('updated_at', comment.created_at)
    
    post.comments.pushObject(comment)
  });

  socket.on('updateComment', function(data) {
  })

  socket.on('destroyComment', function(data) {
  })
</script>
